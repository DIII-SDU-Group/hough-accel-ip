// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module houghlines_accel_AxiStream2MatStream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ldata1_dout,
        ldata1_empty_n,
        ldata1_read,
        imgInput_44_din,
        imgInput_44_full_n,
        imgInput_44_write,
        rows_dout,
        rows_empty_n,
        rows_read,
        cols_bound_per_npc_dout,
        cols_bound_per_npc_empty_n,
        cols_bound_per_npc_read,
        last_blk_width_dout,
        last_blk_width_empty_n,
        last_blk_width_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state7 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] ldata1_dout;
input   ldata1_empty_n;
output   ldata1_read;
output  [7:0] imgInput_44_din;
input   imgInput_44_full_n;
output   imgInput_44_write;
input  [5:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [9:0] cols_bound_per_npc_dout;
input   cols_bound_per_npc_empty_n;
output   cols_bound_per_npc_read;
input  [3:0] last_blk_width_dout;
input   last_blk_width_empty_n;
output   last_blk_width_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ldata1_read;
reg imgInput_44_write;
reg rows_read;
reg cols_bound_per_npc_read;
reg last_blk_width_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ldata1_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1073_reg_829;
reg   [0:0] icmp_ln1084_reg_838;
reg    imgInput_44_blk_n;
reg   [0:0] icmp_ln1104_reg_914;
reg    rows_blk_n;
reg    cols_bound_per_npc_blk_n;
reg    last_blk_width_blk_n;
reg   [31:0] j_reg_135;
reg   [18:0] i_reg_146;
reg   [9:0] cols_bound_per_npc_read_reg_776;
reg   [3:0] last_blk_width_read_reg_782;
wire   [31:0] cols_bound_per_npc_cast3_i_fu_198_p1;
reg   [31:0] cols_bound_per_npc_cast3_i_reg_799;
wire    ap_CS_fsm_state4;
wire  signed [31:0] sub_cast_i_fu_213_p1;
reg  signed [31:0] sub_cast_i_reg_804;
wire   [4:0] sub4_i_fu_217_p2;
reg   [4:0] sub4_i_reg_809;
wire   [4:0] add_ln1093_fu_223_p2;
reg   [4:0] add_ln1093_reg_814;
wire   [18:0] grp_fu_755_p2;
reg   [18:0] mul_ln1073_reg_819;
wire   [18:0] i_1_fu_229_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage0_iter0;
reg    ap_predicate_op118_read_state6;
reg    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1073_fu_235_p2;
wire   [0:0] bLast_fu_244_p2;
reg   [0:0] bLast_reg_833;
wire   [0:0] icmp_ln1084_fu_275_p2;
wire   [0:0] icmp_ln674_1_fu_298_p2;
reg   [0:0] icmp_ln674_1_reg_842;
wire   [3:0] trunc_ln674_1_fu_304_p1;
reg   [3:0] trunc_ln674_1_reg_849;
wire   [3:0] trunc_ln674_2_fu_308_p1;
reg   [3:0] trunc_ln674_2_reg_857;
wire   [0:0] icmp_ln1085_fu_323_p2;
reg   [0:0] icmp_ln1085_reg_863;
wire   [3:0] trunc_ln1086_fu_329_p1;
reg   [3:0] trunc_ln1086_reg_868;
wire   [0:0] icmp_ln674_fu_343_p2;
reg   [0:0] icmp_ln674_reg_873;
wire   [3:0] trunc_ln674_fu_349_p1;
reg   [3:0] trunc_ln674_reg_880;
wire   [3:0] add_ln674_1_fu_377_p2;
reg   [3:0] add_ln674_1_reg_887;
wire   [0:0] icmp_ln414_fu_383_p2;
reg   [0:0] icmp_ln414_reg_892;
wire   [3:0] trunc_ln414_fu_389_p1;
reg   [3:0] trunc_ln414_reg_900;
wire   [3:0] trunc_ln414_1_fu_393_p1;
reg   [3:0] trunc_ln414_1_reg_908;
wire   [0:0] icmp_ln1104_fu_408_p2;
wire   [31:0] j_1_fu_419_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [7:0] ap_phi_mux_localbuffer_V_5_phi_fu_160_p4;
wire   [7:0] p_Result_3_fu_714_p2;
wire   [7:0] ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_157;
wire   [7:0] p_Result_4_fu_499_p2;
reg   [31:0] rem_fu_96;
wire   [31:0] rem_2_fu_312_p2;
wire   [31:0] rem_1_fu_397_p2;
reg    ap_block_state1;
reg   [7:0] p_Val2_s_fu_100;
reg    ap_block_pp0_stage0_01001;
wire  signed [8:0] rows_load_cast_cast_cast_cast_fu_180_p1;
wire   [10:0] cols_bound_per_npc_cast2_i_fu_204_p1;
wire   [10:0] sub_i_fu_207_p2;
wire   [4:0] last_blk_width_cast3_i_fu_201_p1;
wire   [3:0] xf_bits_per_clock_fu_249_p3;
wire   [4:0] ptr_width_minus_fu_264_p3;
wire   [31:0] zext_ln1079_fu_256_p1;
wire   [4:0] select_ln1093_fu_281_p3;
wire   [31:0] zext_ln1093_fu_288_p1;
wire   [31:0] grp_fu_166_p2;
wire   [31:0] sub_ln1093_fu_292_p2;
wire   [28:0] tmp_fu_333_p4;
wire   [4:0] zext_ln1079_1_fu_260_p1;
wire  signed [4:0] add_ln1090_fu_353_p2;
wire   [3:0] trunc_ln1090_1_fu_367_p1;
wire   [3:0] trunc_ln1090_fu_363_p1;
wire   [3:0] sub_ln674_3_fu_371_p2;
wire  signed [31:0] sext_ln1090_fu_359_p1;
wire  signed [31:0] sext_ln1080_fu_271_p1;
wire   [31:0] add_ln1105_fu_413_p2;
wire   [3:0] sub_ln674_4_fu_440_p2;
wire   [3:0] sub_ln674_6_fu_449_p2;
reg   [7:0] tmp_4_fu_430_p4;
wire   [3:0] sub_ln674_5_fu_444_p2;
wire   [3:0] select_ln674_3_fu_453_p3;
wire   [3:0] select_ln674_5_fu_467_p3;
wire   [3:0] sub_ln674_7_fu_473_p2;
wire   [7:0] select_ln674_4_fu_460_p3;
wire   [7:0] zext_ln674_3_fu_479_p1;
wire   [7:0] zext_ln674_4_fu_483_p1;
wire   [7:0] lshr_ln674_3_fu_487_p2;
wire   [7:0] lshr_ln674_4_fu_493_p2;
wire   [3:0] add_ln674_fu_516_p2;
wire   [3:0] grp_fu_171_p2;
reg   [7:0] tmp_1_fu_506_p4;
wire   [3:0] select_ln674_fu_521_p3;
wire   [3:0] select_ln674_2_fu_535_p3;
wire   [3:0] sub_ln674_2_fu_541_p2;
wire   [7:0] select_ln674_1_fu_528_p3;
wire   [7:0] zext_ln674_fu_547_p1;
wire   [7:0] zext_ln674_1_fu_551_p1;
wire   [7:0] lshr_ln674_fu_555_p2;
wire   [7:0] lshr_ln674_1_fu_561_p2;
wire   [3:0] sub_ln414_fu_573_p2;
wire   [7:0] zext_ln414_fu_578_p1;
wire   [7:0] p_Result_s_fu_567_p2;
wire   [7:0] lshr_ln414_fu_582_p2;
wire   [7:0] p_Result_1_fu_588_p2;
wire   [7:0] zext_ln674_2_fu_601_p1;
wire   [7:0] lshr_ln674_2_fu_604_p2;
wire   [3:0] sub_ln414_1_fu_616_p2;
wire   [3:0] select_ln414_fu_621_p3;
wire   [3:0] select_ln414_2_fu_631_p3;
wire   [3:0] select_ln414_1_fu_626_p3;
wire   [3:0] sub_ln414_2_fu_637_p2;
wire   [7:0] p_Result_2_fu_610_p2;
wire   [7:0] zext_ln414_1_fu_643_p1;
wire   [7:0] shl_ln414_fu_655_p2;
reg   [7:0] tmp_3_fu_661_p4;
wire   [7:0] zext_ln414_2_fu_647_p1;
wire   [7:0] zext_ln414_3_fu_651_p1;
wire   [7:0] shl_ln414_1_fu_678_p2;
wire   [7:0] lshr_ln414_1_fu_684_p2;
wire   [7:0] and_ln414_fu_690_p2;
wire   [7:0] localbuffer_V_fu_594_p3;
wire   [7:0] xor_ln414_fu_696_p2;
wire   [7:0] select_ln414_3_fu_671_p3;
wire   [7:0] and_ln414_1_fu_702_p2;
wire   [7:0] and_ln414_2_fu_708_p2;
wire   [3:0] sub_ln674_8_fu_726_p2;
wire   [7:0] zext_ln674_5_fu_731_p1;
wire   [7:0] lshr_ln674_5_fu_735_p2;
wire   [7:0] select_ln1078_fu_741_p3;
wire   [9:0] grp_fu_755_p0;
wire   [8:0] grp_fu_755_p1;
reg    grp_fu_755_ce;
wire    ap_CS_fsm_state7;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [18:0] grp_fu_755_p00;
wire   [18:0] grp_fu_755_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

houghlines_accel_mul_mul_10ns_9ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
mul_mul_10ns_9ns_19_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_755_p0),
    .din1(grp_fu_755_p1),
    .ce(grp_fu_755_ce),
    .dout(grp_fu_755_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_235_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_146 <= i_1_fu_229_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_146 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_235_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_135 <= j_1_fu_419_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_135 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_fu_100 <= 8'd0;
    end else if (((icmp_ln1084_reg_838 == 1'd1) & (icmp_ln1073_reg_829 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_fu_100 <= ldata1_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rem_fu_96 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_275_p2 == 1'd1) & (icmp_ln1073_fu_235_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_fu_96 <= rem_1_fu_397_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_275_p2 == 1'd0) & (icmp_ln1073_fu_235_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rem_fu_96 <= rem_2_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln1093_reg_814 <= add_ln1093_fu_223_p2;
        cols_bound_per_npc_cast3_i_reg_799[9 : 0] <= cols_bound_per_npc_cast3_i_fu_198_p1[9 : 0];
        mul_ln1073_reg_819 <= grp_fu_755_p2;
        sub4_i_reg_809 <= sub4_i_fu_217_p2;
        sub_cast_i_reg_804 <= sub_cast_i_fu_213_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_275_p2 == 1'd1) & (icmp_ln1073_fu_235_p2 == 1'd0))) begin
        add_ln674_1_reg_887 <= add_ln674_1_fu_377_p2;
        icmp_ln1085_reg_863 <= icmp_ln1085_fu_323_p2;
        icmp_ln414_reg_892 <= icmp_ln414_fu_383_p2;
        icmp_ln674_reg_873 <= icmp_ln674_fu_343_p2;
        trunc_ln1086_reg_868 <= trunc_ln1086_fu_329_p1;
        trunc_ln414_1_reg_908 <= trunc_ln414_1_fu_393_p1;
        trunc_ln414_reg_900 <= trunc_ln414_fu_389_p1;
        trunc_ln674_reg_880 <= trunc_ln674_fu_349_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1073_fu_235_p2 == 1'd0))) begin
        bLast_reg_833 <= bLast_fu_244_p2;
        icmp_ln1084_reg_838 <= icmp_ln1084_fu_275_p2;
        icmp_ln1104_reg_914 <= icmp_ln1104_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cols_bound_per_npc_read_reg_776 <= cols_bound_per_npc_dout;
        last_blk_width_read_reg_782 <= last_blk_width_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1073_reg_829 <= icmp_ln1073_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1084_fu_275_p2 == 1'd0) & (icmp_ln1073_fu_235_p2 == 1'd0))) begin
        icmp_ln674_1_reg_842 <= icmp_ln674_1_fu_298_p2;
        trunc_ln674_1_reg_849 <= trunc_ln674_1_fu_304_p1;
        trunc_ln674_2_reg_857 <= trunc_ln674_2_fu_308_p1;
    end
end

always @ (*) begin
    if ((icmp_ln1073_fu_235_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1073_reg_829 == 1'd0)) begin
        if ((icmp_ln1084_reg_838 == 1'd0)) begin
            ap_phi_mux_localbuffer_V_5_phi_fu_160_p4 = p_Result_4_fu_499_p2;
        end else if ((icmp_ln1084_reg_838 == 1'd1)) begin
            ap_phi_mux_localbuffer_V_5_phi_fu_160_p4 = p_Result_3_fu_714_p2;
        end else begin
            ap_phi_mux_localbuffer_V_5_phi_fu_160_p4 = ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_157;
        end
    end else begin
        ap_phi_mux_localbuffer_V_5_phi_fu_160_p4 = ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_157;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_blk_n = cols_bound_per_npc_empty_n;
    end else begin
        cols_bound_per_npc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_read = 1'b1;
    end else begin
        cols_bound_per_npc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_pp0_stage0) | ((1'b1 == ap_CS_fsm_state1) & ((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))))) begin
        grp_fu_755_ce = 1'b0;
    end else begin
        grp_fu_755_ce = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1104_reg_914 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgInput_44_blk_n = imgInput_44_full_n;
    end else begin
        imgInput_44_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1104_reg_914 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgInput_44_write = 1'b1;
    end else begin
        imgInput_44_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_blk_n = last_blk_width_empty_n;
    end else begin
        last_blk_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        last_blk_width_read = 1'b1;
    end else begin
        last_blk_width_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1084_reg_838 == 1'd1) & (icmp_ln1073_reg_829 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ldata1_blk_n = ldata1_empty_n;
    end else begin
        ldata1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op118_read_state6 == 1'b1))) begin
        ldata1_read = 1'b1;
    end else begin
        ldata1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1073_fu_235_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1073_fu_235_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1090_fu_353_p2 = ($signed(zext_ln1079_1_fu_260_p1) + $signed(5'd31));

assign add_ln1093_fu_223_p2 = (last_blk_width_cast3_i_fu_201_p1 + 5'd7);

assign add_ln1105_fu_413_p2 = (j_reg_135 + 32'd1);

assign add_ln674_1_fu_377_p2 = (sub_ln674_3_fu_371_p2 + 4'd7);

assign add_ln674_fu_516_p2 = ($signed(trunc_ln674_reg_880) + $signed(4'd9));

assign and_ln414_1_fu_702_p2 = (xor_ln414_fu_696_p2 & localbuffer_V_fu_594_p3);

assign and_ln414_2_fu_708_p2 = (select_ln414_3_fu_671_p3 & and_ln414_fu_690_p2);

assign and_ln414_fu_690_p2 = (shl_ln414_1_fu_678_p2 & lshr_ln414_1_fu_684_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln1104_reg_914 == 1'd1) & (imgInput_44_full_n == 1'b0)) | ((ldata1_empty_n == 1'b0) & (ap_predicate_op118_read_state6 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln1104_reg_914 == 1'd1) & (imgInput_44_full_n == 1'b0)) | ((ldata1_empty_n == 1'b0) & (ap_predicate_op118_read_state6 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln1104_reg_914 == 1'd1) & (imgInput_44_full_n == 1'b0)) | ((ldata1_empty_n == 1'b0) & (ap_predicate_op118_read_state6 == 1'b1))));
end

always @ (*) begin
    ap_block_state1 = ((last_blk_width_empty_n == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter1 = (((icmp_ln1104_reg_914 == 1'd1) & (imgInput_44_full_n == 1'b0)) | ((ldata1_empty_n == 1'b0) & (ap_predicate_op118_read_state6 == 1'b1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_157 = 'bx;

always @ (*) begin
    ap_predicate_op118_read_state6 = ((icmp_ln1084_reg_838 == 1'd1) & (icmp_ln1073_reg_829 == 1'd0));
end

assign bLast_fu_244_p2 = ((j_reg_135 == sub_cast_i_reg_804) ? 1'b1 : 1'b0);

assign cols_bound_per_npc_cast2_i_fu_204_p1 = cols_bound_per_npc_read_reg_776;

assign cols_bound_per_npc_cast3_i_fu_198_p1 = cols_bound_per_npc_read_reg_776;

assign grp_fu_166_p2 = (32'd8 - rem_fu_96);

assign grp_fu_171_p2 = (4'd7 - trunc_ln674_reg_880);

assign grp_fu_755_p0 = grp_fu_755_p00;

assign grp_fu_755_p00 = cols_bound_per_npc_dout;

assign grp_fu_755_p1 = grp_fu_755_p10;

assign grp_fu_755_p10 = $unsigned(rows_load_cast_cast_cast_cast_fu_180_p1);

assign i_1_fu_229_p2 = (i_reg_146 + 19'd1);

assign icmp_ln1073_fu_235_p2 = ((i_reg_146 == mul_ln1073_reg_819) ? 1'b1 : 1'b0);

assign icmp_ln1084_fu_275_p2 = (($signed(rem_fu_96) < $signed(zext_ln1079_fu_256_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_fu_323_p2 = ((rem_fu_96 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1104_fu_408_p2 = (($signed(j_reg_135) < $signed(cols_bound_per_npc_cast3_i_reg_799)) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_383_p2 = ((rem_fu_96 > sext_ln1090_fu_359_p1) ? 1'b1 : 1'b0);

assign icmp_ln674_1_fu_298_p2 = ((grp_fu_166_p2 > sub_ln1093_fu_292_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_343_p2 = ((tmp_fu_333_p4 != 29'd0) ? 1'b1 : 1'b0);

assign imgInput_44_din = (select_ln1078_fu_741_p3 & ap_phi_mux_localbuffer_V_5_phi_fu_160_p4);

assign j_1_fu_419_p3 = ((bLast_fu_244_p2[0:0] == 1'b1) ? 32'd0 : add_ln1105_fu_413_p2);

assign last_blk_width_cast3_i_fu_201_p1 = last_blk_width_read_reg_782;

assign localbuffer_V_fu_594_p3 = ((icmp_ln1085_reg_863[0:0] == 1'b1) ? 8'd0 : p_Result_1_fu_588_p2);

assign lshr_ln414_1_fu_684_p2 = 8'd255 >> zext_ln414_3_fu_651_p1;

assign lshr_ln414_fu_582_p2 = 8'd255 >> zext_ln414_fu_578_p1;

assign lshr_ln674_1_fu_561_p2 = 8'd255 >> zext_ln674_1_fu_551_p1;

assign lshr_ln674_2_fu_604_p2 = 8'd255 >> zext_ln674_2_fu_601_p1;

assign lshr_ln674_3_fu_487_p2 = select_ln674_4_fu_460_p3 >> zext_ln674_3_fu_479_p1;

assign lshr_ln674_4_fu_493_p2 = 8'd255 >> zext_ln674_4_fu_483_p1;

assign lshr_ln674_5_fu_735_p2 = 8'd255 >> zext_ln674_5_fu_731_p1;

assign lshr_ln674_fu_555_p2 = select_ln674_1_fu_528_p3 >> zext_ln674_fu_547_p1;

assign p_Result_1_fu_588_p2 = (p_Result_s_fu_567_p2 & lshr_ln414_fu_582_p2);

assign p_Result_2_fu_610_p2 = (lshr_ln674_2_fu_604_p2 & ldata1_dout);

assign p_Result_3_fu_714_p2 = (and_ln414_2_fu_708_p2 | and_ln414_1_fu_702_p2);

assign p_Result_4_fu_499_p2 = (lshr_ln674_4_fu_493_p2 & lshr_ln674_3_fu_487_p2);

assign p_Result_s_fu_567_p2 = (lshr_ln674_fu_555_p2 & lshr_ln674_1_fu_561_p2);

assign ptr_width_minus_fu_264_p3 = ((bLast_fu_244_p2[0:0] == 1'b1) ? sub4_i_reg_809 : 5'd0);

assign rem_1_fu_397_p2 = ($signed(rem_fu_96) + $signed(sext_ln1080_fu_271_p1));

assign rem_2_fu_312_p2 = (rem_fu_96 - zext_ln1079_fu_256_p1);

assign rows_load_cast_cast_cast_cast_fu_180_p1 = $signed(rows_dout);

assign select_ln1078_fu_741_p3 = ((bLast_reg_833[0:0] == 1'b1) ? lshr_ln674_5_fu_735_p2 : 8'd255);

assign select_ln1093_fu_281_p3 = ((bLast_fu_244_p2[0:0] == 1'b1) ? add_ln1093_reg_814 : 5'd15);

assign select_ln414_1_fu_626_p3 = ((icmp_ln414_reg_892[0:0] == 1'b1) ? trunc_ln414_1_reg_908 : trunc_ln414_reg_900);

assign select_ln414_2_fu_631_p3 = ((icmp_ln414_reg_892[0:0] == 1'b1) ? sub_ln414_1_fu_616_p2 : trunc_ln414_reg_900);

assign select_ln414_3_fu_671_p3 = ((icmp_ln414_reg_892[0:0] == 1'b1) ? tmp_3_fu_661_p4 : shl_ln414_fu_655_p2);

assign select_ln414_fu_621_p3 = ((icmp_ln414_reg_892[0:0] == 1'b1) ? trunc_ln414_reg_900 : trunc_ln414_1_reg_908);

assign select_ln674_1_fu_528_p3 = ((icmp_ln674_reg_873[0:0] == 1'b1) ? tmp_1_fu_506_p4 : p_Val2_s_fu_100);

assign select_ln674_2_fu_535_p3 = ((icmp_ln674_reg_873[0:0] == 1'b1) ? grp_fu_171_p2 : trunc_ln674_reg_880);

assign select_ln674_3_fu_453_p3 = ((icmp_ln674_1_reg_842[0:0] == 1'b1) ? sub_ln674_4_fu_440_p2 : sub_ln674_6_fu_449_p2);

assign select_ln674_4_fu_460_p3 = ((icmp_ln674_1_reg_842[0:0] == 1'b1) ? tmp_4_fu_430_p4 : p_Val2_s_fu_100);

assign select_ln674_5_fu_467_p3 = ((icmp_ln674_1_reg_842[0:0] == 1'b1) ? sub_ln674_5_fu_444_p2 : trunc_ln674_1_reg_849);

assign select_ln674_fu_521_p3 = ((icmp_ln674_reg_873[0:0] == 1'b1) ? add_ln674_fu_516_p2 : grp_fu_171_p2);

assign sext_ln1080_fu_271_p1 = $signed(ptr_width_minus_fu_264_p3);

assign sext_ln1090_fu_359_p1 = add_ln1090_fu_353_p2;

assign shl_ln414_1_fu_678_p2 = 8'd255 << zext_ln414_2_fu_647_p1;

assign shl_ln414_fu_655_p2 = p_Result_2_fu_610_p2 << zext_ln414_1_fu_643_p1;

assign sub4_i_fu_217_p2 = (5'd8 - last_blk_width_cast3_i_fu_201_p1);

assign sub_cast_i_fu_213_p1 = $signed(sub_i_fu_207_p2);

assign sub_i_fu_207_p2 = ($signed(cols_bound_per_npc_cast2_i_fu_204_p1) + $signed(11'd2047));

assign sub_ln1093_fu_292_p2 = (zext_ln1093_fu_288_p1 - rem_fu_96);

assign sub_ln414_1_fu_616_p2 = (4'd7 - trunc_ln414_reg_900);

assign sub_ln414_2_fu_637_p2 = (4'd7 - select_ln414_fu_621_p3);

assign sub_ln414_fu_573_p2 = ($signed(4'd8) - $signed(trunc_ln1086_reg_868));

assign sub_ln674_2_fu_541_p2 = (4'd7 - select_ln674_fu_521_p3);

assign sub_ln674_3_fu_371_p2 = (trunc_ln1090_1_fu_367_p1 - trunc_ln1090_fu_363_p1);

assign sub_ln674_4_fu_440_p2 = (trunc_ln674_1_reg_849 - trunc_ln674_2_reg_857);

assign sub_ln674_5_fu_444_p2 = (4'd7 - trunc_ln674_1_reg_849);

assign sub_ln674_6_fu_449_p2 = (trunc_ln674_2_reg_857 - trunc_ln674_1_reg_849);

assign sub_ln674_7_fu_473_p2 = (4'd7 - select_ln674_3_fu_453_p3);

assign sub_ln674_8_fu_726_p2 = ($signed(4'd8) - $signed(last_blk_width_read_reg_782));

integer ap_tvar_int_0;

always @ (p_Val2_s_fu_100) begin
    for (ap_tvar_int_0 = 8 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 7 - 0) begin
            tmp_1_fu_506_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_1_fu_506_p4[ap_tvar_int_0] = p_Val2_s_fu_100[7 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (shl_ln414_fu_655_p2) begin
    for (ap_tvar_int_1 = 8 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 7 - 0) begin
            tmp_3_fu_661_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_3_fu_661_p4[ap_tvar_int_1] = shl_ln414_fu_655_p2[7 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Val2_s_fu_100) begin
    for (ap_tvar_int_2 = 8 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 7 - 0) begin
            tmp_4_fu_430_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_4_fu_430_p4[ap_tvar_int_2] = p_Val2_s_fu_100[7 - ap_tvar_int_2];
        end
    end
end

assign tmp_fu_333_p4 = {{grp_fu_166_p2[31:3]}};

assign trunc_ln1086_fu_329_p1 = rem_fu_96[3:0];

assign trunc_ln1090_1_fu_367_p1 = rem_fu_96[3:0];

assign trunc_ln1090_fu_363_p1 = add_ln1090_fu_353_p2[3:0];

assign trunc_ln414_1_fu_393_p1 = add_ln1090_fu_353_p2[3:0];

assign trunc_ln414_fu_389_p1 = rem_fu_96[3:0];

assign trunc_ln674_1_fu_304_p1 = grp_fu_166_p2[3:0];

assign trunc_ln674_2_fu_308_p1 = sub_ln1093_fu_292_p2[3:0];

assign trunc_ln674_fu_349_p1 = grp_fu_166_p2[3:0];

assign xf_bits_per_clock_fu_249_p3 = ((bLast_fu_244_p2[0:0] == 1'b1) ? last_blk_width_read_reg_782 : 4'd8);

assign xor_ln414_fu_696_p2 = (8'd255 ^ and_ln414_fu_690_p2);

assign zext_ln1079_1_fu_260_p1 = xf_bits_per_clock_fu_249_p3;

assign zext_ln1079_fu_256_p1 = xf_bits_per_clock_fu_249_p3;

assign zext_ln1093_fu_288_p1 = select_ln1093_fu_281_p3;

assign zext_ln414_1_fu_643_p1 = select_ln414_2_fu_631_p3;

assign zext_ln414_2_fu_647_p1 = select_ln414_1_fu_626_p3;

assign zext_ln414_3_fu_651_p1 = sub_ln414_2_fu_637_p2;

assign zext_ln414_fu_578_p1 = sub_ln414_fu_573_p2;

assign zext_ln674_1_fu_551_p1 = sub_ln674_2_fu_541_p2;

assign zext_ln674_2_fu_601_p1 = add_ln674_1_reg_887;

assign zext_ln674_3_fu_479_p1 = select_ln674_5_fu_467_p3;

assign zext_ln674_4_fu_483_p1 = sub_ln674_7_fu_473_p2;

assign zext_ln674_5_fu_731_p1 = sub_ln674_8_fu_726_p2;

assign zext_ln674_fu_547_p1 = select_ln674_2_fu_535_p3;

always @ (posedge ap_clk) begin
    cols_bound_per_npc_cast3_i_reg_799[31:10] <= 22'b0000000000000000000000;
end

endmodule //houghlines_accel_AxiStream2MatStream
